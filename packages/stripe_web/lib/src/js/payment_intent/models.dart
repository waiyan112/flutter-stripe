// ignore_for_file: non_constant_identifier_names

part of '../js.dart';

// Module paymentIntents
/*type PaymentIntentStatus = 'requires_payment_method' |
    'requires_confirmation' |
    'requires_action' |
    'processing' |
    'requires_capture' |
    'canceled' |
    'succeeded';
*/
/*type PaymentIntentCancelationReason = 'duplicate' |
    'fraudulent' |
    'requested_by_customer' |
    'abandoned'
    // Generated by Stripe internally:
    |
    'failed_invoice' |
    'void_invoice' |
    'automatic';
*/
@anonymous
@JS()
abstract class PaymentIntentNextActionRedirectToUrl {
  /// Type of the next action to perform
  external String /*'redirect_to_url'*/ get type;
  external set type(String /*'redirect_to_url'*/ v);

  /// Contains instructions for authenticating a payment by
  /// redirecting your customer to another page or application.
  external dynamic
      /*{
                /**
                 * If the customer does not exit their browser while
                 * authenticating, they will be redirected to this
                 * specified URL after completion.
                 */
                return_url: string;

                /**
                 * The URL you must redirect your customer to in
                 * order to authenticate the payment.
                 */
                url: string;
            }*/
      get redirect_to_url;
  external set redirect_to_url(
      dynamic
          /*{
                /**
                 * If the customer does not exit their browser while
                 * authenticating, they will be redirected to this
                 * specified URL after completion.
                 */
                return_url: string;

                /**
                 * The URL you must redirect your customer to in
                 * order to authenticate the payment.
                 */
                url: string;
            }*/
          v);
  external factory PaymentIntentNextActionRedirectToUrl(
      {String /*'redirect_to_url'*/ type,
      dynamic
          /*{
                /**
                 * If the customer does not exit their browser while
                 * authenticating, they will be redirected to this
                 * specified URL after completion.
                 */
                return_url: string;

                /**
                 * The URL you must redirect your customer to in
                 * order to authenticate the payment.
                 */
                url: string;
            }*/
          redirect_to_url});
}

@anonymous
@JS()
abstract class PaymentIntentNextActionUseStripeSdk {
  /// Type of the next action to perform
  external String /*'use_stripe_sdk'*/ get type;
  external set type(String /*'use_stripe_sdk'*/ v);

  /// When confirming a PaymentIntent with Stripe.js,
  /// Stripe.js depends on the contents of this dictionary
  /// to invoke authentication flows. The shape of the contents
  /// is subject to change and is only intended to be used by Stripe.js.
  external dynamic get use_stripe_sdk;
  external set use_stripe_sdk(dynamic v);
  external factory PaymentIntentNextActionUseStripeSdk(
      {String /*'use_stripe_sdk'*/ type, dynamic use_stripe_sdk});
}

@anonymous
@JS()
abstract class PaymentIntent {
  /// Unique identifier for the object.
  external String get id;
  external set id(String v);

  /// Value is "payment_intent".
  external String /*'payment_intent'*/ get object;
  external set object(String /*'payment_intent'*/ v);

  /// The amount in cents that is to be collected from this PaymentIntent.
  external num get amount;
  external set amount(num v);

  /// The amount that can be captured with from this PaymentIntent (in cents).
  external num get amount_capturable;
  external set amount_capturable(num v);

  /// The amount that was collected from this PaymentIntent (in cents).
  external num get amount_received;
  external set amount_received(num v);

  /// ID of the Connect application that created the PaymentIntent.
  external String? /*String|Null*/ get application;
  external set application(String? /*String|Null*/ v);

  /// A fee in cents that will be applied to the invoice and transferred to the application owner's Stripe account.
  external num? /*num|Null*/ get application_fee_amount;
  external set application_fee_amount(num? /*num|Null*/ v);

  /// Populated when `status` is `canceled`, this is the time at which the PaymentIntent was canceled.
  /// Measured in seconds since the Unix epoch.
  external num? /*num|Null*/ get canceled_at;
  external set canceled_at(num? /*num|Null*/ v);

  /// User-given reason for cancellation of this PaymentIntent.
  external String /*'duplicate'|'fraudulent'|'requested_by_customer'|'abandoned'|'failed_invoice'|'void_invoice'|'automatic'|Null*/ get cancelation_reason;
  external set cancelation_reason(
      String /*'duplicate'|'fraudulent'|'requested_by_customer'|'abandoned'|'failed_invoice'|'void_invoice'|'automatic'|Null*/ v);

  /// Capture method of this PaymentIntent.
  external String /*'automatic'|'manual'*/ get capture_method;
  external set capture_method(String /*'automatic'|'manual'*/ v);

  /// Charges that were created by this PaymentIntent, if any.
  external JsArray<Charge> get charges;
  external set charges(JsArray<Charge> v);

  /// The client secret of this PaymentIntent. Used for client-side retrieval using a publishable key. Please refer to dynamic authentication guide on how client_secret should be handled.
  external String get client_secret;
  external set client_secret(String v);

  /// Confirmation method of this PaymentIntent.
  external String? /*'automatic'|'manual'*/ get confirmation_method;
  external set confirmation_method(String? /*'automatic'|'manual'*/ v);

  /// Time at which the object was created. Measured in seconds since the Unix epoch.
  external num get created;
  external set created(num v);

  /// Three-letter ISO currency code, in lowercase. Must be a supported currency.
  external String get currency;
  external set currency(String v);

  /// ID of the Customer this PaymentIntent is for if one exists.
  external String? /*String|Null*/ get customer;
  external set customer(String? /*String|Null*/ v);

  /// An arbitrary string attached to the object. Often useful for displaying to users.
  external String get description;
  external set description(String v);

  /// The payment error encountered in the previous PaymentIntent confirmation.
  external Error? /*Error|Null*/ get last_payment_error;
  external set last_payment_error(Error? /*Error|Null*/ v);

  /// Has the value true if the object exists in live mode or the value false
  /// if the object exists in test mode.
  external bool get livemode;
  external set livemode(bool v);
  external Metadata get metadata;
  external set metadata(Metadata v);

  /// If present, this property tells you what actions you need to take in order
  /// for your customer to fulfill a payment using the provided source.
  external dynamic /*PaymentIntentNextActionUseStripeSdk|PaymentIntentNextActionRedirectToUrl*/ get next_action;
  external set next_action(
      dynamic /*PaymentIntentNextActionUseStripeSdk|PaymentIntentNextActionRedirectToUrl*/ v);

  /// The account (if any) for which the funds of the PaymentIntent are intended.
  /// See the PaymentIntents Connect usage guide for details.
  external String /*String|Null*/ get on_behalf_of;
  external set on_behalf_of(String /*String|Null*/ v);

  /// ID of the payment method used in this PaymentIntent.
  external String /*String|Null*/ get payment_method;
  external set payment_method(String /*String|Null*/ v);

  /// The JsArray of payment method types (e.g. card) that this PaymentIntent is allowed to use.
  external JsArray<String> get payment_method_types;
  external set payment_method_types(JsArray<String> v);

  /// Email address that the receipt for the resulting payment will be sent to.
  external String /*String|Null*/ get receipt_email;
  external set receipt_email(String /*String|Null*/ v);

  /// ID of the review associated with this PaymentIntent, if any.
  external String /*String|Null*/ get review;
  external set review(String /*String|Null*/ v);

  /// Shipping information for this PaymentIntent.
  external ShippingDetails? /*ShippingDetails|Null*/ get shipping;
  external set shipping(ShippingDetails? /*ShippingDetails|Null*/ v);

  /// The ID of a Source (e.g. 'src_abc123' or 'card_abc123').
  /// Will be null unless this PaymentIntent was created with a source
  /// instead of a payment_method. (Undocumented as of August 2019)
  external String? /*String|Null*/ get source;
  external set source(String? /*String|Null*/ v);

  /// Extra information about a PaymentIntent. This will appear on your
  /// customerâ€™s statement when this PaymentIntent succeeds in creating a charge.
  external String /*String|Null*/ get statement_descriptor;
  external set statement_descriptor(String /*String|Null*/ v);

  /// The several states the PaymentIntent goes through until it it either canceled or succeeds.
  external String /*'requires_payment_method'|'requires_confirmation'|'requires_action'|'processing'|'requires_capture'|'canceled'|'succeeded'*/ get status;
  external set status(
      String /*'requires_payment_method'|'requires_confirmation'|'requires_action'|'processing'|'requires_capture'|'canceled'|'succeeded'*/ v);

  /// The data with which to automatically create a Transfer when the payment is finalized.
  external dynamic
      /*{
                /**
                 * The account (if any) the payment will be attributed to for tax reporting,
                 * and where funds from the payment will be transferred to upon payment success.
                 */
                destination: string;
            }|Null*/
      get transfer_data;
  external set transfer_data(
      dynamic
          /*{
                /**
                 * The account (if any) the payment will be attributed to for tax reporting,
                 * and where funds from the payment will be transferred to upon payment success.
                 */
                destination: string;
            }|Null*/
          v);

  /// A string that identifies the resulting payment as part of a group.
  external String /*String|Null*/ get transfer_group;
  external set transfer_group(String /*String|Null*/ v);
  external factory PaymentIntent(
      {String id,
      String /*'payment_intent'*/ object,
      num amount,
      num amount_capturable,
      num amount_received,
      String /*String|Null*/ application,
      num /*num|Null*/ application_fee_amount,
      num /*num|Null*/ canceled_at,
      String /*'duplicate'|'fraudulent'|'requested_by_customer'|'abandoned'|'failed_invoice'|'void_invoice'|'automatic'|Null*/ cancelation_reason,
      String /*'automatic'|'manual'*/ capture_method,
      JsArray<Charge> charges,
      String client_secret,
      String /*'automatic'|'manual'*/ confirmation_method,
      num created,
      String currency,
      String /*String|Null*/ customer,
      String description,
      Error /*Error|Null*/ last_payment_error,
      bool livemode,
      Metadata metadata,
      dynamic /*PaymentIntentNextActionUseStripeSdk|PaymentIntentNextActionRedirectToUrl*/ next_action,
      String /*String|Null*/ on_behalf_of,
      String /*String|Null*/ payment_method,
      JsArray<String> payment_method_types,
      String /*String|Null*/ receipt_email,
      String /*String|Null*/ review,
      ShippingDetails /*ShippingDetails|Null*/ shipping,
      String /*String|Null*/ source,
      String /*String|Null*/ statement_descriptor,
      String /*'requires_payment_method'|'requires_confirmation'|'requires_action'|'processing'|'requires_capture'|'canceled'|'succeeded'*/ status,
      dynamic
          /*{
                /**
                 * The account (if any) the payment will be attributed to for tax reporting,
                 * and where funds from the payment will be transferred to upon payment success.
                 */
                destination: string;
            }|Null*/
          transfer_data,
      String /*String|Null*/ transfer_group});
}

@anonymous
@JS()
abstract class Charge {
  /// Unique identifier for the object.
  external String get id;
  external set id(String v);

  /// Value is 'charge'
  external String /*'charge'*/ get object;
  external set object(String /*'charge'*/ v);

  /// Amount charged in cents/pence, positive integer or zero.
  external num get amount;
  external set amount(num v);

  /// Amount in cents/pence refunded (can be less than the amount attribute on the
  /// charge if a partial refund was issued), positive integer or zero.
  external num get amount_refunded;
  external set amount_refunded(num v);

  /// ID of the Connect application that created the charge.
  external String /*String|Null*/ get application;
  external set application(String /*String|Null*/ v);

  /// The application fee (if any) for the charge. See the Connect documentation
  /// for details.
  external String /*String|Null*/ get application_fee;
  external set application_fee(String /*String|Null*/ v);

  /// The amount of the application fee (if any) for the charge. See the Connect
  /// documentation for details.
  external num /*num|Null*/ get application_fee_amount;
  external set application_fee_amount(num /*num|Null*/ v);

  /// ID of the balance transaction that describes the impact of this charge on
  /// your account balance (not including refunds or disputes).
  external String get balance_transaction;
  external set balance_transaction(String v);

  /// Billing information associated with the payment method at the time of the transaction.
  external BillingDetails get billing_details;
  external set billing_details(BillingDetails v);

  /// If the charge was created without capturing, this boolean represents whether or not it is
  /// still uncaptured or has since been captured.
  external bool get captured;
  external set captured(bool v);

  /// Time at which the object was created. Measured in seconds since the Unix epoch.
  external num get created;
  external set created(num v);

  /// Three-letter ISO currency code representing the currency in which the
  /// charge was made.
  external String get currency;
  external set currency(String v);

  /// ID of the customer this charge is for if one exists.
  external String /*String|Null*/ get customer;
  external set customer(String /*String|Null*/ v);

  /// An arbitrary string attached to the object. Often useful for displaying to users.
  external String /*String|Null*/ get description;
  external set description(String /*String|Null*/ v);

  /// Details about the dispute if the charge has been disputed.
  external String /*String|Null*/ get dispute;
  external set dispute(String /*String|Null*/ v);

  /// Error code explaining reason for charge failure if available (see the errors section for a JsArray of
  /// codes: https://stripe.com/docs/api#errors).
  external String /*String|Null*/ get failure_code;
  external set failure_code(String /*String|Null*/ v);

  /// Message to user further explaining reason for charge failure if available.
  external String /*String|Null*/ get failure_message;
  external set failure_message(String /*String|Null*/ v);

  /// Hash with information on fraud assessments for the charge.
  external dynamic
      /*{
                /**
                 * Assessments reported by you have the key user_report and, if set, possible values of "safe" and "fraudulent".
                 */
                user_report?: "fraudulent" | "safe";

                /**
                 * Assessments from Stripe have the key stripe_report and, if set, the value "fraudulent".
                 */
                stripe_report?: "fraudulent";
            }*/
      get fraud_details;
  external set fraud_details(
      dynamic
          /*{
                /**
                 * Assessments reported by you have the key user_report and, if set, possible values of "safe" and "fraudulent".
                 */
                user_report?: "fraudulent" | "safe";

                /**
                 * Assessments from Stripe have the key stripe_report and, if set, the value "fraudulent".
                 */
                stripe_report?: "fraudulent";
            }*/
          v);

  /// ID of the invoice this charge is for if one exists. [Expandable]
  external String /*String|Null*/ get invoice;
  external set invoice(String /*String|Null*/ v);

  /// Has the value true if the object exists in live mode or the value false if
  /// the object exists in test mode.
  external bool get livemode;
  external set livemode(bool v);
  external Metadata get metadata;
  external set metadata(Metadata v);

  /// The Stripe account ID for which these funds are intended. Automatically
  /// set if you use the destination parameter. For details, see [Creating
  /// Separate Charges and Transfers]
  /// <https://stripe.com/docs/connect/charges-transfers#on-behalf-of>.
  external String /*String|Null*/ get on_behalf_of;
  external set on_behalf_of(String /*String|Null*/ v);

  /// ID of the order this charge is for if one exists.
  external String /*String|Null*/ get order;
  external set order(String /*String|Null*/ v);

  /// Details about whether the payment was accepted, and why. See
  /// understanding declines for details.
  external dynamic
      /*{
                network_status: 'approved_by_network' | 'declined_by_network' | 'not_sent_to_network' | 'reversed_after_approval';
                reason: 'highest_risk_level' | 'elevated_risk_level' | 'rule' | null;
                risk_level: 'normal' | 'elevated' | 'highest' | 'not_assessed' | 'unknown';
                risk_score: number;
                rule?: string;
                seller_message: string;
                type: 'authorized' | 'manual_review' | 'issuer_declined' | 'blocked' | 'invalid';
            }|Null*/
      get outcome;
  external set outcome(
      dynamic
          /*{
                network_status: 'approved_by_network' | 'declined_by_network' | 'not_sent_to_network' | 'reversed_after_approval';
                reason: 'highest_risk_level' | 'elevated_risk_level' | 'rule' | null;
                risk_level: 'normal' | 'elevated' | 'highest' | 'not_assessed' | 'unknown';
                risk_score: number;
                rule?: string;
                seller_message: string;
                type: 'authorized' | 'manual_review' | 'issuer_declined' | 'blocked' | 'invalid';
            }|Null*/
          v);

  /// true if the charge succeeded, or was successfully authorized for later capture.
  external bool get paid;
  external set paid(bool v);

  /// ID of the PaymentIntent associated with this charge, if one exists.
  external String get payment_intent;
  external set payment_intent(String v);

  /// ID of the payment method used in this charge.
  external String /*String|Null*/ get payment_method;
  external set payment_method(String /*String|Null*/ v);
  external PaymentMethodDetails get payment_method_details;
  external set payment_method_details(PaymentMethodDetails v);

  /// This is the email address that the receipt for this charge was sent to.
  external String /*String|Null*/ get receipt_email;
  external set receipt_email(String /*String|Null*/ v);

  /// This is the transaction number that appears on email receipts sent for this charge.
  external String /*String|Null*/ get receipt_number;
  external set receipt_number(String /*String|Null*/ v);

  /// This is the URL to view the receipt for this charge. The receipt is kept up-to-date to the
  /// latest state of the charge, including any refunds. If the charge is for an Invoice, the
  /// receipt will be stylized as an Invoice receipt.
  external String get receipt_url;
  external set receipt_url(String v);

  /// Whether or not the charge has been fully refunded. If the charge is only partially refunded,
  /// this attribute will still be false.
  external bool get refunded;
  external set refunded(bool v);

  /// A JsArray of refunds that have been applied to the charge.
  external JsArray<Refund> get refunds;
  external set refunds(JsArray<Refund> v);

  /// ID of the review associated with this charge if one exists.
  external String /*String|Null*/ get review;
  external set review(String /*String|Null*/ v);

  /// Shipping information for the charge.
  external ShippingDetails /*ShippingDetails|Null*/ get shipping;
  external set shipping(ShippingDetails /*ShippingDetails|Null*/ v);

  /// For most Stripe users, the source of every charge is a credit or debit card.
  /// This hash is then the card object describing that card.
  external Source get source;
  external set source(Source v);

  /// The transfer ID which created this charge. Only present if the charge came
  /// from another Stripe account. See the Connect documentation for details.
  external String /*String|Null*/ get source_transfer;
  external set source_transfer(String /*String|Null*/ v);

  /// Extra information about a charge. This will appear on your customerâ€™s
  /// credit card statement.
  external String /*String|Null*/ get statement_descriptor;
  external set statement_descriptor(String /*String|Null*/ v);

  /// The status of the payment is either "succeeded", "pending", or "failed".
  external String /*'succeeded'|'pending'|'failed'*/ get status;
  external set status(String /*'succeeded'|'pending'|'failed'*/ v);

  /// ID of the transfer to the destination account (only applicable if the
  /// charge was created using the destination parameter).
  external String /*String|Null*/ get transfer;
  external set transfer(String /*String|Null*/ v);

  /// A string that identifies this transaction as part of a group.
  /// See the Connect documentation for details.
  external String /*String|Null*/ get transfer_group;
  external set transfer_group(String /*String|Null*/ v);
  external factory Charge(
      {String id,
      String /*'charge'*/ object,
      num amount,
      num amount_refunded,
      String /*String|Null*/ application,
      String /*String|Null*/ application_fee,
      num /*num|Null*/ application_fee_amount,
      String balance_transaction,
      BillingDetails billing_details,
      bool captured,
      num created,
      String currency,
      String /*String|Null*/ customer,
      String /*String|Null*/ description,
      String /*String|Null*/ dispute,
      String /*String|Null*/ failure_code,
      String /*String|Null*/ failure_message,
      dynamic
          /*{
                /**
                 * Assessments reported by you have the key user_report and, if set, possible values of "safe" and "fraudulent".
                 */
                user_report?: "fraudulent" | "safe";

                /**
                 * Assessments from Stripe have the key stripe_report and, if set, the value "fraudulent".
                 */
                stripe_report?: "fraudulent";
            }*/
          fraud_details,
      String /*String|Null*/ invoice,
      bool livemode,
      Metadata metadata,
      String /*String|Null*/ on_behalf_of,
      String /*String|Null*/ order,
      dynamic
          /*{
                network_status: 'approved_by_network' | 'declined_by_network' | 'not_sent_to_network' | 'reversed_after_approval';
                reason: 'highest_risk_level' | 'elevated_risk_level' | 'rule' | null;
                risk_level: 'normal' | 'elevated' | 'highest' | 'not_assessed' | 'unknown';
                risk_score: number;
                rule?: string;
                seller_message: string;
                type: 'authorized' | 'manual_review' | 'issuer_declined' | 'blocked' | 'invalid';
            }|Null*/
          outcome,
      bool paid,
      String payment_intent,
      String /*String|Null*/ payment_method,
      PaymentMethodDetails payment_method_details,
      String /*String|Null*/ receipt_email,
      String /*String|Null*/ receipt_number,
      String receipt_url,
      bool refunded,
      JsArray<Refund> refunds,
      String /*String|Null*/ review,
      ShippingDetails /*ShippingDetails|Null*/ shipping,
      Source source,
      String /*String|Null*/ source_transfer,
      String /*String|Null*/ statement_descriptor,
      String /*'succeeded'|'pending'|'failed'*/ status,
      String /*String|Null*/ transfer,
      String /*String|Null*/ transfer_group});
}

@anonymous
@JS()
abstract class Refund {
  /// Unique identifier for the object.
  external String get id;
  external set id(String v);

  /// Value is "refund"
  external String /*'refund'*/ get object;
  external set object(String /*'refund'*/ v);

  /// Refund amount, in cents.
  external num get amount;
  external set amount(num v);

  /// Balance transaction that describes the impact on your account balance.
  external String /*String|Null*/ get balance_transaction;
  external set balance_transaction(String /*String|Null*/ v);

  /// ID of the charge that was refunded.
  external String get charge;
  external set charge(String v);

  /// Time at which the object was created. Measured in seconds since the Unix epoch.
  external num get created;
  external set created(num v);

  /// Three-letter ISO currency code, in lowercase. Must be a supported currency.
  external String get currency;
  external set currency(String v);

  /// An arbitrary string attached to the object. Often useful for
  /// displaying to users. (Available on non-card refunds only)
  external String get description;
  external set description(String v);

  /// If the refund failed, this balance transaction describes the
  /// adjustment made on your account balance that reverses the
  /// initial balance transaction.
  external String get failure_balance_transaction;
  external set failure_balance_transaction(String v);

  /// If the refund failed, the reason for refund failure if known
  external String /*'lost_or_stolen_card'|'expired_or_canceled_card'|'unknown'*/ get failure_reason;
  external set failure_reason(
      String /*'lost_or_stolen_card'|'expired_or_canceled_card'|'unknown'*/ v);
  external Metadata get metadata;
  external set metadata(Metadata v);

  /// Reason for the refund
  external String /*'duplicate'|'fraudulent'|'requested_by_customer'|Null*/ get reason;
  external set reason(
      String /*'duplicate'|'fraudulent'|'requested_by_customer'|Null*/ v);

  /// This is the transaction number that appears on email
  /// receipts sent for this refund.
  external String /*String|Null*/ get receipt_number;
  external set receipt_number(String /*String|Null*/ v);

  /// The transfer reversal that is associated with the refund.
  /// Only present if the charge came from another Stripe account.
  /// See the Connect documentation for details.
  external String /*String|Null*/ get source_transfer_reversal;
  external set source_transfer_reversal(String /*String|Null*/ v);

  /// Status of the refund. For credit card refunds, this can be
  /// pending, succeeded, or failed. For other types of refunds,
  /// it can be pending, succeeded, failed, or canceled. Refer to
  /// our refunds documentation for more details.
  external String /*'pending'|'succeeded'|'failed'|'canceled'*/ get status;
  external set status(String /*'pending'|'succeeded'|'failed'|'canceled'*/ v);

  /// If the accompanying transfer was reversed, the transfer reversal object.
  /// Only applicable if the charge was created using the destination parameter.
  external String /*String|Null*/ get transfer_reversal;
  external set transfer_reversal(String /*String|Null*/ v);
  external factory Refund(
      {String id,
      String /*'refund'*/ object,
      num amount,
      String /*String|Null*/ balance_transaction,
      String charge,
      num created,
      String currency,
      String description,
      String failure_balance_transaction,
      String /*'lost_or_stolen_card'|'expired_or_canceled_card'|'unknown'*/ failure_reason,
      Metadata metadata,
      String /*'duplicate'|'fraudulent'|'requested_by_customer'|Null*/ reason,
      String /*String|Null*/ receipt_number,
      String /*String|Null*/ source_transfer_reversal,
      String /*'pending'|'succeeded'|'failed'|'canceled'*/ status,
      String /*String|Null*/ transfer_reversal});
}

// End module paymentIntents
